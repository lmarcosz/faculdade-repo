;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 25/02/2025 14:52:03
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF29  	GOTO        82
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x001C	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x001E	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x0020	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x0022	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x0024	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x0026	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x0028	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x002A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x002C	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x002E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x0030	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x0032	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x0034	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x0036	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x0038	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x003A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x003C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x003E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x0040	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x0042	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x0044	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x0046	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x0048	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x004A	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x004C	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x004E	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x0050	0x0012      	RETURN      0
; end of _Div_16X16_U
_main:
;PushButton_Display.c,3 :: 		void main(){
;PushButton_Display.c,5 :: 		unsigned char ucMask[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
0x0052	0x0E3F      	MOVLW       63
0x0054	0x6E1B      	MOVWF       main_ucMask_L0 
0x0056	0x0E06      	MOVLW       6
0x0058	0x6E1C      	MOVWF       main_ucMask_L0+1 
0x005A	0x0E5B      	MOVLW       91
0x005C	0x6E1D      	MOVWF       main_ucMask_L0+2 
0x005E	0x0E4F      	MOVLW       79
0x0060	0x6E1E      	MOVWF       main_ucMask_L0+3 
0x0062	0x0E66      	MOVLW       102
0x0064	0x6E1F      	MOVWF       main_ucMask_L0+4 
0x0066	0x0E6D      	MOVLW       109
0x0068	0x6E20      	MOVWF       main_ucMask_L0+5 
0x006A	0x0E7D      	MOVLW       125
0x006C	0x6E21      	MOVWF       main_ucMask_L0+6 
0x006E	0x0E07      	MOVLW       7
0x0070	0x6E22      	MOVWF       main_ucMask_L0+7 
0x0072	0x0E7F      	MOVLW       127
0x0074	0x6E23      	MOVWF       main_ucMask_L0+8 
0x0076	0x0E6F      	MOVLW       111
0x0078	0x6E24      	MOVWF       main_ucMask_L0+9 
;PushButton_Display.c,14 :: 		ADCON1 = 0x0f;       // Configura todos canais como Digital.
0x007A	0x0E0F      	MOVLW       15
0x007C	0x6EC1      	MOVWF       ADCON1 
;PushButton_Display.c,16 :: 		TRISB.RB0=1;         // Define o pino RB0 do PORTB como entrada.
0x007E	0x8093      	BSF         TRISB, 0 
;PushButton_Display.c,17 :: 		TRISB.RB1=1;         // Define o pino RB1 Do PORTB como entrada.
0x0080	0x8293      	BSF         TRISB, 1 
;PushButton_Display.c,19 :: 		TRISA.RA2=0;         // Define o pino RA2 do PORTA como saida(Sele??o Display 1).
0x0082	0x9492      	BCF         TRISA, 2 
;PushButton_Display.c,20 :: 		TRISA.RA3=0;         // Define o pino RA3 do PORTA como saida(Sele??o Display 2).
0x0084	0x9692      	BCF         TRISA, 3 
;PushButton_Display.c,21 :: 		TRISA.RA4=0;         // Define o pino RA4 do PORTA como saida(Sele??o Display 3).
0x0086	0x9892      	BCF         TRISA, 4 
;PushButton_Display.c,22 :: 		TRISA.RA5=0;         // Define o pino RA5 do PORTA como saida(Sele??o Display 4).
0x0088	0x9A92      	BCF         TRISA, 5 
;PushButton_Display.c,24 :: 		TRISD = 0;           // Define todos os pinos Do PORTD como saida.
0x008A	0x6A95      	CLRF        TRISD 
;PushButton_Display.c,26 :: 		ucStatus_inc=0;      // Inicializa a variavel com o valor 0.
0x008C	0x6A15      	CLRF        main_ucStatus_inc_L0 
;PushButton_Display.c,27 :: 		ucStatus_dec=0;      // Inicializa a variavel com o valor 0.
0x008E	0x6A16      	CLRF        main_ucStatus_dec_L0 
;PushButton_Display.c,28 :: 		uiContador=0;        // Inicializa a variavel com o valor 0.
0x0090	0x6A17      	CLRF        main_uiContador_L0 
0x0092	0x6A18      	CLRF        main_uiContador_L0+1 
;PushButton_Display.c,30 :: 		while(1){            // Aqui definimos uma condi??o sempre verdadeira como parametro, portanto todo o bloco ser? repetido indefinidamente.
L_main0:
;PushButton_Display.c,33 :: 		if((PORTB.RB0==0)&&(ucStatus_inc==0)){   // Incrementa somente uma vez quando a tecla for pressionada.
0x0094	0xB081      	BTFSC       PORTB, 0 
0x0096	0xD00F      	BRA         L_main4
0x0098	0x5015      	MOVF        main_ucStatus_inc_L0, 0 
0x009A	0x0A00      	XORLW       0
0x009C	0xE10C      	BNZ         L_main4
L__main23:
;PushButton_Display.c,34 :: 		ucStatus_inc=1;                       // Variavel de travamento do incremento.
0x009E	0x0E01      	MOVLW       1
0x00A0	0x6E15      	MOVWF       main_ucStatus_inc_L0 
;PushButton_Display.c,35 :: 		uiContador++;                         // Esse operador aritmetico(++) realiza o mesmo que variavel = variavel + 1.
0x00A2	0x4A17      	INFSNZ      main_uiContador_L0, 1 
0x00A4	0x2A18      	INCF        main_uiContador_L0+1, 1 
;PushButton_Display.c,36 :: 		if(uiContador>9999){ // Define o valor maximo a ser mostrado no displays como 9999.
0x00A6	0x5018      	MOVF        main_uiContador_L0+1, 0 
0x00A8	0x0827      	SUBLW       39
0x00AA	0xE102      	BNZ         L__main25
0x00AC	0x5017      	MOVF        main_uiContador_L0, 0 
0x00AE	0x080F      	SUBLW       15
L__main25:
0x00B0	0xE202      	BC          L_main5
;PushButton_Display.c,37 :: 		uiContador=0;
0x00B2	0x6A17      	CLRF        main_uiContador_L0 
0x00B4	0x6A18      	CLRF        main_uiContador_L0+1 
;PushButton_Display.c,38 :: 		}
L_main5:
;PushButton_Display.c,39 :: 		}
L_main4:
;PushButton_Display.c,40 :: 		if((PORTB.RB0==1)&&(ucStatus_inc==1)){   // Volta a disponibilizar a op??o de incremento quando a tecla for solta.
0x00B6	0xA081      	BTFSS       PORTB, 0 
0x00B8	0xD004      	BRA         L_main8
0x00BA	0x5015      	MOVF        main_ucStatus_inc_L0, 0 
0x00BC	0x0A01      	XORLW       1
0x00BE	0xB4D8      	BTFSC       STATUS, 2 
L__main22:
;PushButton_Display.c,41 :: 		ucStatus_inc=0;
0x00C0	0x6A15      	CLRF        main_ucStatus_inc_L0 
;PushButton_Display.c,42 :: 		}
L_main8:
;PushButton_Display.c,44 :: 		if((PORTB.RB1==0)&&(ucStatus_dec==0)){   // Decrementa somente uma vez quando a tecla for pressionada.
0x00C2	0xB281      	BTFSC       PORTB, 1 
0x00C4	0xD013      	BRA         L_main11
0x00C6	0x5016      	MOVF        main_ucStatus_dec_L0, 0 
0x00C8	0x0A00      	XORLW       0
0x00CA	0xE110      	BNZ         L_main11
L__main21:
;PushButton_Display.c,45 :: 		ucStatus_dec=1;                       // Variavel de travamento do decremento.
0x00CC	0x0E01      	MOVLW       1
0x00CE	0x6E16      	MOVWF       main_ucStatus_dec_L0 
;PushButton_Display.c,46 :: 		uiContador--;                         // Esse operador aritmetico(--) realiza o mesmo que variavel = variavel - 1.
0x00D0	0x0E01      	MOVLW       1
0x00D2	0x5E17      	SUBWF       main_uiContador_L0, 1 
0x00D4	0x0E00      	MOVLW       0
0x00D6	0x5A18      	SUBWFB      main_uiContador_L0+1, 1 
;PushButton_Display.c,47 :: 		if(uiContador>9999){  // Define o valor maximo quando ocorrer a transicao (decremento) de 0 para 9999.
0x00D8	0x5018      	MOVF        main_uiContador_L0+1, 0 
0x00DA	0x0827      	SUBLW       39
0x00DC	0xE102      	BNZ         L__main26
0x00DE	0x5017      	MOVF        main_uiContador_L0, 0 
0x00E0	0x080F      	SUBLW       15
L__main26:
0x00E2	0xE204      	BC          L_main12
;PushButton_Display.c,48 :: 		uiContador=9999;
0x00E4	0x0E0F      	MOVLW       15
0x00E6	0x6E17      	MOVWF       main_uiContador_L0 
0x00E8	0x0E27      	MOVLW       39
0x00EA	0x6E18      	MOVWF       main_uiContador_L0+1 
;PushButton_Display.c,49 :: 		}
L_main12:
;PushButton_Display.c,50 :: 		}
L_main11:
;PushButton_Display.c,51 :: 		if((PORTB.RB1==1)&&(ucStatus_dec==1)){   // Volta a disponibilizar a op??o de incremento quando a tecla for solta.
0x00EC	0xA281      	BTFSS       PORTB, 1 
0x00EE	0xD004      	BRA         L_main15
0x00F0	0x5016      	MOVF        main_ucStatus_dec_L0, 0 
0x00F2	0x0A01      	XORLW       1
0x00F4	0xB4D8      	BTFSC       STATUS, 2 
L__main20:
;PushButton_Display.c,52 :: 		ucStatus_dec=0;
0x00F6	0x6A16      	CLRF        main_ucStatus_dec_L0 
;PushButton_Display.c,53 :: 		}
L_main15:
;PushButton_Display.c,55 :: 		uiValor = uiContador;                   // Coloca o conteudo da variavel do contador na varaivel auxiliar.
0x00F8	0xF019C017  	MOVFF       main_uiContador_L0, main_uiValor_L0
0x00FC	0xF01AC018  	MOVFF       main_uiContador_L0+1, main_uiValor_L0+1
;PushButton_Display.c,58 :: 		PORTD = ucMask[uiValor%10];              // Pega modulo da divisao por 10 e coloca o valor no PORTD.
0x0100	0x0E0A      	MOVLW       10
0x0102	0x6E04      	MOVWF       R4 
0x0104	0x0E00      	MOVLW       0
0x0106	0x6E05      	MOVWF       R5 
0x0108	0xF000C017  	MOVFF       main_uiContador_L0, R0
0x010C	0xF001C018  	MOVFF       main_uiContador_L0+1, R1
0x0110	0xDF85      	RCALL       _Div_16X16_U
0x0112	0xF000C008  	MOVFF       R8, R0
0x0116	0xF001C009  	MOVFF       R9, R1
0x011A	0x0E1B      	MOVLW       main_ucMask_L0
0x011C	0x2400      	ADDWF       R0, 0 
0x011E	0x6EE9      	MOVWF       FSR0L 
0x0120	0x0E00      	MOVLW       hi_addr(main_ucMask_L0)
0x0122	0x2001      	ADDWFC      R1, 0 
0x0124	0x6EEA      	MOVWF       FSR0L+1 
0x0126	0xFF83CFEE  	MOVFF       POSTINC0, PORTD
;PushButton_Display.c,59 :: 		PORTA.RA5 = 1;                           // Liga o transistor associado ao display 1.
0x012A	0x8A80      	BSF         PORTA, 5 
;PushButton_Display.c,60 :: 		Delay_ms(2);                             // Delay para escrita no display.
0x012C	0x0E06      	MOVLW       6
0x012E	0x6E0C      	MOVWF       R12, 0
0x0130	0x0E30      	MOVLW       48
0x0132	0x6E0D      	MOVWF       R13, 0
L_main16:
0x0134	0x2E0D      	DECFSZ      R13, 1, 0
0x0136	0xD7FE      	BRA         L_main16
0x0138	0x2E0C      	DECFSZ      R12, 1, 0
0x013A	0xD7FC      	BRA         L_main16
0x013C	0x0000      	NOP
;PushButton_Display.c,61 :: 		PORTA.RA5 = 0;                           // Desliga o transistor associado ao display 1.
0x013E	0x9A80      	BCF         PORTA, 5 
;PushButton_Display.c,62 :: 		uiValor/=10;                             // Divide variavel por 10 para definir a dezena.
0x0140	0x0E0A      	MOVLW       10
0x0142	0x6E04      	MOVWF       R4 
0x0144	0x0E00      	MOVLW       0
0x0146	0x6E05      	MOVWF       R5 
0x0148	0xF000C019  	MOVFF       main_uiValor_L0, R0
0x014C	0xF001C01A  	MOVFF       main_uiValor_L0+1, R1
0x0150	0xDF65      	RCALL       _Div_16X16_U
0x0152	0xF019C000  	MOVFF       R0, main_uiValor_L0
0x0156	0xF01AC001  	MOVFF       R1, main_uiValor_L0+1
;PushButton_Display.c,64 :: 		PORTD = ucMask[uiValor%10];
0x015A	0x0E0A      	MOVLW       10
0x015C	0x6E04      	MOVWF       R4 
0x015E	0x0E00      	MOVLW       0
0x0160	0x6E05      	MOVWF       R5 
0x0162	0xDF5C      	RCALL       _Div_16X16_U
0x0164	0xF000C008  	MOVFF       R8, R0
0x0168	0xF001C009  	MOVFF       R9, R1
0x016C	0x0E1B      	MOVLW       main_ucMask_L0
0x016E	0x2400      	ADDWF       R0, 0 
0x0170	0x6EE9      	MOVWF       FSR0L 
0x0172	0x0E00      	MOVLW       hi_addr(main_ucMask_L0)
0x0174	0x2001      	ADDWFC      R1, 0 
0x0176	0x6EEA      	MOVWF       FSR0L+1 
0x0178	0xFF83CFEE  	MOVFF       POSTINC0, PORTD
;PushButton_Display.c,65 :: 		PORTA.RA4 = 1;
0x017C	0x8880      	BSF         PORTA, 4 
;PushButton_Display.c,66 :: 		Delay_ms(2);
0x017E	0x0E06      	MOVLW       6
0x0180	0x6E0C      	MOVWF       R12, 0
0x0182	0x0E30      	MOVLW       48
0x0184	0x6E0D      	MOVWF       R13, 0
L_main17:
0x0186	0x2E0D      	DECFSZ      R13, 1, 0
0x0188	0xD7FE      	BRA         L_main17
0x018A	0x2E0C      	DECFSZ      R12, 1, 0
0x018C	0xD7FC      	BRA         L_main17
0x018E	0x0000      	NOP
;PushButton_Display.c,67 :: 		PORTA.RA4 = 0;
0x0190	0x9880      	BCF         PORTA, 4 
;PushButton_Display.c,68 :: 		uiValor/=10;
0x0192	0x0E0A      	MOVLW       10
0x0194	0x6E04      	MOVWF       R4 
0x0196	0x0E00      	MOVLW       0
0x0198	0x6E05      	MOVWF       R5 
0x019A	0xF000C019  	MOVFF       main_uiValor_L0, R0
0x019E	0xF001C01A  	MOVFF       main_uiValor_L0+1, R1
0x01A2	0xDF3C      	RCALL       _Div_16X16_U
0x01A4	0xF019C000  	MOVFF       R0, main_uiValor_L0
0x01A8	0xF01AC001  	MOVFF       R1, main_uiValor_L0+1
;PushButton_Display.c,70 :: 		PORTD = ucMask[uiValor%10];
0x01AC	0x0E0A      	MOVLW       10
0x01AE	0x6E04      	MOVWF       R4 
0x01B0	0x0E00      	MOVLW       0
0x01B2	0x6E05      	MOVWF       R5 
0x01B4	0xDF33      	RCALL       _Div_16X16_U
0x01B6	0xF000C008  	MOVFF       R8, R0
0x01BA	0xF001C009  	MOVFF       R9, R1
0x01BE	0x0E1B      	MOVLW       main_ucMask_L0
0x01C0	0x2400      	ADDWF       R0, 0 
0x01C2	0x6EE9      	MOVWF       FSR0L 
0x01C4	0x0E00      	MOVLW       hi_addr(main_ucMask_L0)
0x01C6	0x2001      	ADDWFC      R1, 0 
0x01C8	0x6EEA      	MOVWF       FSR0L+1 
0x01CA	0xFF83CFEE  	MOVFF       POSTINC0, PORTD
;PushButton_Display.c,71 :: 		PORTA.RA3 = 1;
0x01CE	0x8680      	BSF         PORTA, 3 
;PushButton_Display.c,72 :: 		Delay_ms(2);
0x01D0	0x0E06      	MOVLW       6
0x01D2	0x6E0C      	MOVWF       R12, 0
0x01D4	0x0E30      	MOVLW       48
0x01D6	0x6E0D      	MOVWF       R13, 0
L_main18:
0x01D8	0x2E0D      	DECFSZ      R13, 1, 0
0x01DA	0xD7FE      	BRA         L_main18
0x01DC	0x2E0C      	DECFSZ      R12, 1, 0
0x01DE	0xD7FC      	BRA         L_main18
0x01E0	0x0000      	NOP
;PushButton_Display.c,73 :: 		PORTA.RA3 = 0;
0x01E2	0x9680      	BCF         PORTA, 3 
;PushButton_Display.c,74 :: 		uiValor/=10;
0x01E4	0x0E0A      	MOVLW       10
0x01E6	0x6E04      	MOVWF       R4 
0x01E8	0x0E00      	MOVLW       0
0x01EA	0x6E05      	MOVWF       R5 
0x01EC	0xF000C019  	MOVFF       main_uiValor_L0, R0
0x01F0	0xF001C01A  	MOVFF       main_uiValor_L0+1, R1
0x01F4	0xDF13      	RCALL       _Div_16X16_U
0x01F6	0xF019C000  	MOVFF       R0, main_uiValor_L0
0x01FA	0xF01AC001  	MOVFF       R1, main_uiValor_L0+1
;PushButton_Display.c,76 :: 		PORTD = ucMask[uiValor%10];
0x01FE	0x0E0A      	MOVLW       10
0x0200	0x6E04      	MOVWF       R4 
0x0202	0x0E00      	MOVLW       0
0x0204	0x6E05      	MOVWF       R5 
0x0206	0xDF0A      	RCALL       _Div_16X16_U
0x0208	0xF000C008  	MOVFF       R8, R0
0x020C	0xF001C009  	MOVFF       R9, R1
0x0210	0x0E1B      	MOVLW       main_ucMask_L0
0x0212	0x2400      	ADDWF       R0, 0 
0x0214	0x6EE9      	MOVWF       FSR0L 
0x0216	0x0E00      	MOVLW       hi_addr(main_ucMask_L0)
0x0218	0x2001      	ADDWFC      R1, 0 
0x021A	0x6EEA      	MOVWF       FSR0L+1 
0x021C	0xFF83CFEE  	MOVFF       POSTINC0, PORTD
;PushButton_Display.c,77 :: 		PORTA.RA2 = 1;
0x0220	0x8480      	BSF         PORTA, 2 
;PushButton_Display.c,78 :: 		Delay_ms(2);
0x0222	0x0E06      	MOVLW       6
0x0224	0x6E0C      	MOVWF       R12, 0
0x0226	0x0E30      	MOVLW       48
0x0228	0x6E0D      	MOVWF       R13, 0
L_main19:
0x022A	0x2E0D      	DECFSZ      R13, 1, 0
0x022C	0xD7FE      	BRA         L_main19
0x022E	0x2E0C      	DECFSZ      R12, 1, 0
0x0230	0xD7FC      	BRA         L_main19
0x0232	0x0000      	NOP
;PushButton_Display.c,79 :: 		PORTA.RA2 = 0;
0x0234	0x9480      	BCF         PORTA, 2 
;PushButton_Display.c,80 :: 		}
0x0236	0xD72E      	BRA         L_main0
;PushButton_Display.c,81 :: 		}
L_end_main:
0x0238	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [54]    _Div_16X16_U
0x0052     [488]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    main_ucStatus_inc_L0
0x0016       [1]    main_ucStatus_dec_L0
0x0017       [2]    main_uiContador_L0
0x0019       [2]    main_uiValor_L0
0x001B      [10]    main_ucMask_L0
0x0F80       [1]    PORTA
0x0F81       [1]    PORTB
0x0F83       [1]    PORTD
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
